<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ytwman.greens.commons.entity.mapper.base.RegionEntityMapper" >
  <resultMap id="BaseResultMap" type="com.ytwman.greens.commons.entity.RegionEntity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="small_name" property="smallName" jdbcType="VARCHAR" />
    <result column="index_char" property="indexChar" jdbcType="VARCHAR" />
    <result column="pinyin" property="pinyin" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="weather_code" property="weatherCode" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="zipcode" property="zipcode" jdbcType="VARCHAR" />
    <result column="dialling_code" property="diallingCode" jdbcType="VARCHAR" />
    <result column="lng" property="lng" jdbcType="DECIMAL" />
    <result column="lat" property="lat" jdbcType="DECIMAL" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="sortby" property="sortby" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, parent_id, name, small_name, index_char, pinyin, code, weather_code, level, zipcode, 
    dialling_code, lng, lat, description, sortby, created_time, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ytwman.greens.commons.entity.RegionEntityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from base_region
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from base_region
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ytwman.greens.commons.entity.RegionEntityExample" >
    delete from base_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ytwman.greens.commons.entity.RegionEntity" >
    insert into base_region (id, parent_id, name, 
      small_name, index_char, pinyin, 
      code, weather_code, level, 
      zipcode, dialling_code, lng, 
      lat, description, sortby, 
      created_time, is_delete)
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{smallName,jdbcType=VARCHAR}, #{indexChar,jdbcType=VARCHAR}, #{pinyin,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{weatherCode,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{zipcode,jdbcType=VARCHAR}, #{diallingCode,jdbcType=VARCHAR}, #{lng,jdbcType=DECIMAL}, 
      #{lat,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR}, #{sortby,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ytwman.greens.commons.entity.RegionEntity" useGeneratedKeys="true" keyColumn="id" keyProperty="id" >
    insert into base_region
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="smallName != null" >
        small_name,
      </if>
      <if test="indexChar != null" >
        index_char,
      </if>
      <if test="pinyin != null" >
        pinyin,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="weatherCode != null" >
        weather_code,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="zipcode != null" >
        zipcode,
      </if>
      <if test="diallingCode != null" >
        dialling_code,
      </if>
      <if test="lng != null" >
        lng,
      </if>
      <if test="lat != null" >
        lat,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="sortby != null" >
        sortby,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="smallName != null" >
        #{smallName,jdbcType=VARCHAR},
      </if>
      <if test="indexChar != null" >
        #{indexChar,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null" >
        #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="weatherCode != null" >
        #{weatherCode,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="zipcode != null" >
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="diallingCode != null" >
        #{diallingCode,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        #{lng,jdbcType=DECIMAL},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="sortby != null" >
        #{sortby,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ytwman.greens.commons.entity.RegionEntityExample" resultType="java.lang.Integer" >
    select count(*) from base_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_region
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.smallName != null" >
        small_name = #{record.smallName,jdbcType=VARCHAR},
      </if>
      <if test="record.indexChar != null" >
        index_char = #{record.indexChar,jdbcType=VARCHAR},
      </if>
      <if test="record.pinyin != null" >
        pinyin = #{record.pinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.weatherCode != null" >
        weather_code = #{record.weatherCode,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.zipcode != null" >
        zipcode = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.diallingCode != null" >
        dialling_code = #{record.diallingCode,jdbcType=VARCHAR},
      </if>
      <if test="record.lng != null" >
        lng = #{record.lng,jdbcType=DECIMAL},
      </if>
      <if test="record.lat != null" >
        lat = #{record.lat,jdbcType=DECIMAL},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.sortby != null" >
        sortby = #{record.sortby,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_region
    set id = #{record.id,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      small_name = #{record.smallName,jdbcType=VARCHAR},
      index_char = #{record.indexChar,jdbcType=VARCHAR},
      pinyin = #{record.pinyin,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      weather_code = #{record.weatherCode,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      zipcode = #{record.zipcode,jdbcType=VARCHAR},
      dialling_code = #{record.diallingCode,jdbcType=VARCHAR},
      lng = #{record.lng,jdbcType=DECIMAL},
      lat = #{record.lat,jdbcType=DECIMAL},
      description = #{record.description,jdbcType=VARCHAR},
      sortby = #{record.sortby,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ytwman.greens.commons.entity.RegionEntity" >
    update base_region
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="smallName != null" >
        small_name = #{smallName,jdbcType=VARCHAR},
      </if>
      <if test="indexChar != null" >
        index_char = #{indexChar,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null" >
        pinyin = #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="weatherCode != null" >
        weather_code = #{weatherCode,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="zipcode != null" >
        zipcode = #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="diallingCode != null" >
        dialling_code = #{diallingCode,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        lng = #{lng,jdbcType=DECIMAL},
      </if>
      <if test="lat != null" >
        lat = #{lat,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="sortby != null" >
        sortby = #{sortby,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ytwman.greens.commons.entity.RegionEntity" >
    update base_region
    set parent_id = #{parentId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      small_name = #{smallName,jdbcType=VARCHAR},
      index_char = #{indexChar,jdbcType=VARCHAR},
      pinyin = #{pinyin,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      weather_code = #{weatherCode,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      zipcode = #{zipcode,jdbcType=VARCHAR},
      dialling_code = #{diallingCode,jdbcType=VARCHAR},
      lng = #{lng,jdbcType=DECIMAL},
      lat = #{lat,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      sortby = #{sortby,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>